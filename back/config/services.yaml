# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

    # default env
    env(FS_DEFAULT_ADAPTER): 'local'
    env(FS_CACHE_ROOT): '%kernel.cache_dir%/colllect/'
    env(FS_CACHE_DURATION_IN_SECONDS): 180
    env(FS_LOCAL_ROOT_PATH): '%kernel.project_dir%/uploads/'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            # filesystem Cache
            string $fsCacheRoot: '%env(resolve:FS_CACHE_ROOT)%'
            int $fsCacheDuration: '%env(int:FS_CACHE_DURATION_IN_SECONDS)%'

            # filesystem Local
            string $fsLocalRootPath: '%env(resolve:FS_LOCAL_ROOT_PATH)%'

            # filesystem AWS S3
            string $fsAwsKey: '%env(FS_AWS_S3_KEY)%'
            string $fsAwsSecret: '%env(FS_AWS_S3_SECRET)%'
            string $fsAwsRegion: '%env(FS_AWS_S3_REGION)%'
            string $fsAwsBucket: '%env(FS_AWS_S3_BUCKET)%'

            # filesystem Dropbox
            string $fsDropboxKey: '%env(FS_DROPBOX_KEY)%'
            string $fsDropboxSecret: '%env(FS_DROPBOX_SECRET)%'

            # filesystem FTP
            string $fsFtpHost: '%env(FS_FTP_HOST)%'
            int $fsFtpPort: '%env(int:FS_FTP_PORT)%'
            string $fsFtpUsername: '%env(FS_FTP_USERNAME)%'
            string $fsFtpPassword: '%env(FS_FTP_PASSWORD)%'
            string $fsFtpRootPath: '%env(FS_FTP_ROOT_PATH)%'

            # filesystem SFTP
            string $fsSftpHost: '%env(FS_SFTP_HOST)%'
            int $fsSftpPort: '%env(int:FS_SFTP_PORT)%'
            string $fsSftpUsername: '%env(FS_SFTP_USERNAME)%'
            string $fsSftpPassword: '%env(FS_SFTP_PASSWORD)%'
            string $fsSftpRootPath: '%env(FS_SFTP_ROOT_PATH)%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\EventListener\HashPasswordListener:
        tags: ['doctrine.event_subscriber']

    App\EventListener\UserResolveListener:
        arguments:
            - '@security.user.provider.concrete.app_user_provider'
            - '@security.password_encoder'
        tags:
            - { name: 'kernel.event_listener', event: 'trikoder.oauth2.user_resolve', method: 'onUserResolve' }

    # allow DI of CryptKey into CookieAccessTokenProvider
    League\OAuth2\Server\CryptKey:
        arguments:
            $keyPath: '%env(resolve:OAUTH2_PRIVATE_KEY_PATH)%'
            $keyPermissionsCheck: false

    # Filesystems
    app.filesystem_adapter_manager:
        class: App\Service\FilesystemAdapter\FilesystemAdapterManager
        public: true
        arguments:
            $defaultFilesystemAdapterName: '%env(FS_DEFAULT_ADAPTER)%'

    App\Service\FilesystemAdapter\Local:
        public: false
        tags:
            - { name: app.filesystem_adapter, alias: local }

    App\Service\FilesystemAdapter\AwsS3:
        public: false
        tags:
            - { name: app.filesystem_adapter, alias: aws_s3 }

    App\Service\FilesystemAdapter\Dropbox:
        public: false
        tags:
            - { name: app.filesystem_adapter, alias: dropbox }

    App\Service\FilesystemAdapter\Ftp:
        public: false
        tags:
            - { name: app.filesystem_adapter, alias: ftp }

    App\Service\FilesystemAdapter\Sftp:
        public: false
        tags:
            - { name: app.filesystem_adapter, alias: sftp }

    # aliases
    App\Service\FilesystemAdapter\FilesystemAdapterManager: '@app.filesystem_adapter_manager'
