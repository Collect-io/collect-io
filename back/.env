# In all environments, the following files are loaded if they exist,
# the later taking precedence over the former:
#
#  * .env                contains default values for the environment variables needed by the app
#  * .env.local          uncommitted file with local overrides
#  * .env.$APP_ENV       committed environment-specific defaults
#  * .env.$APP_ENV.local uncommitted environment-specific overrides
#
# Real environment variables win over .env files.
#
# DO NOT DEFINE PRODUCTION SECRETS IN THIS FILE NOR IN ANY OTHER COMMITTED FILES.
#
# Run "composer dump-env prod" to compile .env files for production use (requires symfony/flex >=1.2).
# https://symfony.com/doc/current/best_practices/configuration.html#infrastructure-related-configuration

###> symfony/framework-bundle ###
APP_ENV=dev
APP_DEBUG=true
APP_SECRET=9db5faea8578d14435be9950f53bdc91
#TRUSTED_PROXIES=127.0.0.1,127.0.0.2
#TRUSTED_HOSTS='^localhost|example\.com$'
###< symfony/framework-bundle ###

###> doctrine/doctrine-bundle ###
# Format described at https://www.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/configuration.html#connecting-using-a-url
# For an SQLite database, use: "sqlite:///%kernel.project_dir%/var/data.db"
# For a PostgreSQL database, use: "postgresql://db_user:db_password@127.0.0.1:5432/db_name?serverVersion=11&charset=utf8"
# IMPORTANT: You MUST configure your server version, either here or in config/packages/doctrine.yaml
DATABASE_URL=mysql://colllect:colllectpass@database:3306/colllect?serverVersion=10.2
###< doctrine/doctrine-bundle ###

###> trikoder/oauth2-bundle ###
# You need to generate a public/private key pair:
# Run "openssl genrsa -out var/oauth2/private.key 2048"
# Run "openssl rsa -in var/oauth2/private.key -pubout -out var/oauth2/public.key"
OAUTH2_PRIVATE_KEY_PATH=%kernel.project_dir%/var/oauth2/private.key
OAUTH2_PUBLIC_KEY_PATH=%kernel.project_dir%/var/oauth2/public.key
# Run "php -r 'echo base64_encode(random_bytes(32)), PHP_EOL;'"
# Paste the result of this command below:
OAUTH2_ENCRYPTION_KEY=
###< trikoder/oauth2-bundle ###

### Colllect: File System configuration ###
# Cache (default: 3 minutes)
FS_CACHE_ROOT=%kernel.cache_dir%/colllect/
FS_CACHE_DURATION_IN_SECONDS=180

# Default adapter
# Can be "local", "aws_s3", "ftp" or "sftp"
FS_DEFAULT_ADAPTER=local

# Local
FS_LOCAL_ROOT_PATH=%kernel.project_dir%/var/uploads/

# AWS S3
#
# 1. Create a new bucket: https://s3.console.aws.amazon.com/s3/home
#   1.1. Click "Create bucket"
#   1.2. Choose a bucket name, put this name into FS_AWS_S3_BUCKET below (e.g: colllect-my-company)
#   1.3. Choose a region, put this region into FS_AWS_S3_REGION below (e.g: eu-west-1 for UE (Irland))
#       Check this page to get Region by Region name: https://docs.aws.amazon.com/general/latest/gr/rande.html
#
# 2. Create a new policy: https://console.aws.amazon.com/iam/home#/policies$new
#   2.1. Go to JSON tab
#   2.2. Paste this: `{"Version":"2012-10-17","Statement":[{"Sid":"Stmt1420044805001","Effect":"Allow","Action":["s3:ListBucket","s3:GetObject","s3:GetObjectAcl","s3:PutObject","s3:PutObjectAcl","s3:ReplicateObject","s3:DeleteObject"],"Resource":["arn:aws:s3:::your-bucket-name","arn:aws:s3:::your-bucket-name/*"]}]}`
#   2.3. Change `your-bucket-name` with your actual S3 bucket name
#   2.4. Click "Review" then choose a name and click "Create policy"
#
# 3a. Create an user: https://console.aws.amazon.com/iam/home#/users$new
#   3a.1. Details
#       3a.1.1. Choose an username
#       3a.1.2. Check "Programmatic access"
#       3a.2.3. Click "Next: Permissions"
#   3a.2. Permissions
#       3a.2.1. Go to "Attach existing policies directly" tab
#       3a.2.2. Search your previously created policy (from step 1) and check the checkbox
#       3a.2.3. Click "Next: Tags"
#   3a.3. Tags: nothing to do, click "Next: Review"
#   3a.4. Review: verify data, click "Create"
#
# 3b. Create an Access key on an existing user
#   3b.1. Click on the username in IAM users list
#   3b.2. Go to "Security credentials" tab
#   3b.3. Click on "Create access key" button
#
# 4. Save Access key and Secret access key
#   4.1. Copy "Access key ID" to FS_AWS_S3_KEY below
#   4.2. Click "Show" and copy "Secret access key" to FS_AWS_S3_SECRET below
FS_AWS_S3_BUCKET=
FS_AWS_S3_REGION=
FS_AWS_S3_KEY=
FS_AWS_S3_SECRET=

# Dropbox
#
# 1. Create a new Dropbox app: https://www.dropbox.com/developers/apps/create
#   1.1. Choose "Dropbox API"
#   1.2. Choose "App folder"
#   1.3. Choose a name "Colllect - My Company"
#
# 2. Settings tab
#   Development users: Click "Enable additional users" button
#   App key: Copy this to FS_DROPBOX_KEY below
#   App secret: Copy this to FS_DROPBOX_SECRET below
#   OAuth 2:
#       Redirect URIs: https://your-colllect-domain.tld:port/oauth2/dropbox/complete
#       Allow implicit grant: Disallow
#
# 3. App Branding tab (Optionnal)
#   You can customize the OAuth page here
FS_DROPBOX_KEY=
FS_DROPBOX_SECRET=

# FTP
FS_FTP_HOST=
FS_FTP_PORT=21
FS_FTP_USERNAME=
FS_FTP_PASSWORD=
FS_FTP_ROOT_PATH=

# SFTP
FS_SFTP_HOST=
FS_SFTP_PORT=22
FS_SFTP_USERNAME=
FS_SFTP_PASSWORD=
FS_SFTP_ROOT_PATH=
